/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { IngredientType, IngredientType$ } from "./ingredienttype";
import * as z from "zod";

export type Ingredient = {
    /**
     * The name of the ingredient.
     */
    name: string;
    /**
     * The product code of the ingredient, only available when authenticated.
     */
    productCode?: string | undefined;
    /**
     * The type of ingredient.
     */
    type: IngredientType;
};

/** @internal */
export namespace Ingredient$ {
    export const inboundSchema: z.ZodType<Ingredient, z.ZodTypeDef, unknown> = z.object({
        name: z.string(),
        productCode: z.string().optional(),
        type: IngredientType$.inboundSchema,
    });

    export type Outbound = {
        name: string;
        productCode?: string | undefined;
        type: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Ingredient> = z.object({
        name: z.string(),
        productCode: z.string().optional(),
        type: IngredientType$.outboundSchema,
    });
}

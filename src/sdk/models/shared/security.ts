/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SchemeClientCredentials, SchemeClientCredentials$ } from "./schemeclientcredentials";
import * as z from "zod";

export type Security = {
    apiKey?: string | undefined;
    clientCredentials?: SchemeClientCredentials | undefined;
};

/** @internal */
export namespace Security$ {
    export const inboundSchema: z.ZodType<Security, z.ZodTypeDef, unknown> = z.object({
        apiKey: z.string().optional(),
        clientCredentials: SchemeClientCredentials$.inboundSchema.optional(),
    });

    export type Outbound = {
        apiKey?: string | undefined;
        clientCredentials?: SchemeClientCredentials$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Security> = z.object({
        apiKey: z.string().optional(),
        clientCredentials: SchemeClientCredentials$.outboundSchema.optional(),
    });
}
